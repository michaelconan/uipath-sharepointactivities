<Activity mc:Ignorable="sap sap2010" x:Class="Upload_File" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_SPsiteURL" Type="InArgument(x:String)" />
    <x:Property Name="in_FilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_SPfolder" Type="InArgument(x:String)" />
    <x:Property Name="in_Token" Type="InArgument(x:String)" />
    <x:Property Name="out_Result" Type="OutArgument(njl:JObject)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>937,3920</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Upload_File_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="26">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="54">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>RestSharp</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Upload_File" sap:VirtualizedContainerService.HintSize="917,3820" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strDigest" />
      <Variable x:TypeArguments="x:String" Name="strFileName" />
      <Variable x:TypeArguments="x:String" Name="strURL" />
      <Variable x:TypeArguments="x:String" Name="strUploadResult" />
      <Variable x:TypeArguments="x:Int32" Name="intUploadCode" />
      <Variable x:TypeArguments="s:Byte[]" Name="baFileContent" />
      <Variable x:TypeArguments="x:String" Name="strPSScript" />
      <Variable x:TypeArguments="sco:Collection(x:String)" Name="arrPSOutput" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="rmCode" />
      <Variable x:TypeArguments="x:String" Name="strPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Get_Digest workflow" sap:VirtualizedContainerService.HintSize="875,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Get_Digest.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_SPsiteURL">[in_SPsiteURL]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Token">[in_Token]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Digest">[strDigest]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign DisplayName="Assign Base Filename" sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strFileName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Path.GetFileName(in_FilePath)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke EncodePaths workflow" sap:VirtualizedContainerService.HintSize="875,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="EncodePaths.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="x:String" x:Key="io_SPFolder">[in_SPfolder]</InOutArgument>
        <InOutArgument x:TypeArguments="x:String" x:Key="io_SPFile">[strFileName]</InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign DisplayName="Assign Upload URL" sap:VirtualizedContainerService.HintSize="875,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strURL]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.Format("{0}_api/web/GetFolderByServerRelativeUrl('{1}')/Files/add(url='{2}',overwrite=true)", in_SPsiteURL, in_SPfolder, strFileName)]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="CURL Request" sap:VirtualizedContainerService.HintSize="875,2569" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="isCURLFound" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:Comment sap:VirtualizedContainerService.HintSize="833,170" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// The UiPath HTTP Request activity does not currently support binary data attachments (required for upload of complex files like zip, xlsx)&#xA;&#xA;Currently using cURL request as a workaround as recommended by UiPath." />
      <Assign sap:VirtualizedContainerService.HintSize="833,60" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strPSScript]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[String.Format("curl.exe -i -s --ssl-no-revoke -L -X POST -H ""Accept: application/json; odata=verbose;"" -H ""Authorization: Bearer {0}"" -H ""X-RequestDigest: {1}"" --data-binary ""@{2}"" ""{3}""", in_Token, strDigest, in_FilePath, strUrl)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetCURL workflow" sap:VirtualizedContainerService.HintSize="833,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="GetCURL.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="x:Boolean" x:Key="isFound">[isCURLFound]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <If Condition="[isCURLFound]" DisplayName="If curl in path" sap:VirtualizedContainerService.HintSize="833,208" sap2010:WorkflowViewState.IdRef="If_2">
        <If.Else>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strPSScript]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["$env:Path += "";C:\curl\bin""" + vbNewLine + strPSScript]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
      <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="833,1767" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="5" RetryInterval="00:00:01">
        <ui:RetryScope.ActivityBody>
          <ActivityAction>
            <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="791,1593" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="[strPSScript]" DisplayName="Invoke Power Shell" sap:VirtualizedContainerService.HintSize="749,59" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_1" IsScript="True" Output="[arrPSOutput]" />
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Output Line" sap:VirtualizedContainerService.HintSize="749,870" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[arrPSOutput]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="713,737" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Matches sap:VirtualizedContainerService.HintSize="671,59" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[item]" IsBuilderTabModified="False" Pattern="\d{3}" RegexOption="IgnoreCase, Compiled" Result="[rmCode]" />
                      <If Condition="[rmCode.Any]" DisplayName="If Codes" sap:VirtualizedContainerService.HintSize="671,546" sap2010:WorkflowViewState.IdRef="If_5">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="526,399" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intUploadCode]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[CInt(rmCode.First.ToString)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[intUploadCode &lt;&gt; 100]" DisplayName="If Not Continue" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="If_4">
                              <If.Then>
                                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                              </If.Then>
                            </If>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <Assign sap:VirtualizedContainerService.HintSize="749,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strUploadResult]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[arrPSOutput.Last]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[intUploadCode = 0]" DisplayName="If Timeout" sap:VirtualizedContainerService.HintSize="749,392" sap2010:WorkflowViewState.IdRef="If_3">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[&quot;Sharepoint request timed out&quot;]" />
                    <Throw Exception="[New Exception(&quot;SharePoint request timed out.&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:RetryScope.ActivityBody>
        <ui:RetryScope.Condition>
          <ActivityFunc x:TypeArguments="x:Boolean" />
        </ui:RetryScope.Condition>
      </ui:RetryScope>
    </Sequence>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="875,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Upload" EndPoint="[strURL]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[strUploadResult]" StatusCode="[intUploadCode]" TimeoutMS="6000">
            <ui:HttpClient.Attachments>
              <InArgument x:TypeArguments="x:String" x:Key="file">[in_FilePath]</InArgument>
            </ui:HttpClient.Attachments>
            <ui:HttpClient.Cookies>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Cookies>
            <ui:HttpClient.Headers>
              <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Bearer " + in_Token]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="X-RequestDigest">[strDigest]</InArgument>
            </ui:HttpClient.Headers>
            <ui:HttpClient.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Parameters>
            <ui:HttpClient.UrlSegments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.UrlSegments>
          </ui:HttpClient>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <If Condition="[CStr(intUploadCode).StartsWith(&quot;2&quot;)]" DisplayName="If Successful" sap:VirtualizedContainerService.HintSize="875,524" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[out_Result]" JsonString="[strUploadResult]" />
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="376,376" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[String.Join(vbNewLine, arrPSOutput)]" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[&quot;File upload request error - &quot;+strUploadResult]" />
          <Throw Exception="[New Exception(&quot;SharePoint file upload failed: &quot; +strUploadResult)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>