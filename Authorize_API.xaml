<Activity mc:Ignorable="sap sap2010" x:Class="SP_API" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_SPsiteURL" Type="InArgument(x:String)" />
    <x:Property Name="in_ClientId" Type="InArgument(x:String)" />
    <x:Property Name="in_ClientSecret" Type="InArgument(x:String)" />
    <x:Property Name="out_Token" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>865,3315</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SP_API_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="44">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Workflow to authenticate with SharePoint v1 API for app registered in SharePoint.&#xA;&#xA;To register app:&#xA;- Navigate to {SPurl}/_layouts/15/appregnew.aspx&#xA;- Generate ID, secret, name and input 'localhost'&#xA;  - Securely store credentials for use&#xA;- Navigate to {SPurl}/_layouts/15/appinv.aspx&#xA;- Add appropriate app permissions&#xA;&#xA;Authentication Process:&#xA;- Send dummy call to retrieve Bearer Realm and Client ID (401 expected)&#xA;- Parse Client ID and Bearer Realm from response headers&#xA;- Format request headers and make authorization call for Bearer token" DisplayName="SP_API" sap:VirtualizedContainerService.HintSize="845,3215" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="body" />
      <Variable x:TypeArguments="x:String" Name="result" />
      <Variable x:TypeArguments="x:Int32" Name="code" />
      <Variable x:TypeArguments="x:String" Name="dummyResponse" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[New Dictionary(Of String, Object)]" Name="wwwAuth" />
      <Variable x:TypeArguments="x:String" Name="client_id" />
      <Variable x:TypeArguments="x:String" Name="resource" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="domains" />
      <Variable x:TypeArguments="njl:JObject" Name="resultJSON" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dummyHeaders" />
      <Variable x:TypeArguments="x:Int32" Name="dummyStatus" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="803,720" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="5" RetryInterval="00:00:01">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="563,546" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Dummy for Tenant" EndPoint="[in_SPsiteURL + &quot;_vti_bin/client.svc/&quot;]" sap:VirtualizedContainerService.HintSize="521,22" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="GET" ResponseHeaders="[dummyHeaders]" Result="[dummyResponse]" StatusCode="[dummyStatus]" TimeoutMS="30000">
              <ui:HttpClient.Attachments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Attachments>
              <ui:HttpClient.Cookies>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Cookies>
              <ui:HttpClient.Headers>
                <InArgument x:TypeArguments="x:String" x:Key="Authorization">Bearer</InArgument>
              </ui:HttpClient.Headers>
              <ui:HttpClient.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Parameters>
              <ui:HttpClient.UrlSegments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.UrlSegments>
            </ui:HttpClient>
            <If Condition="[dummyStatus = 0]" DisplayName="If Timeout" sap:VirtualizedContainerService.HintSize="521,392" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[&quot;Sharepoint request timed out&quot;]" />
                  <Throw Exception="[New Exception(&quot;SharePoint request timed out.&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <If sap2010:Annotation.AnnotationText="Expected unauthorized (401) response to retrive Client ID and Bearer Realm for authorization call." Condition="[dummyStatus = 401]" DisplayName="If Not 401" sap:VirtualizedContainerService.HintSize="803,956" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="382,777" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each key/value in www-auth" sap:VirtualizedContainerService.HintSize="340,386" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Split(Cstr(dummyHeaders(&quot;WWW-Authenticate&quot;)), &quot;&quot;&quot;,&quot;)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                </ActivityAction.Argument>
                <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="s:String[]" Name="itemArr" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign - split key / value" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[itemArr]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[item.split("="c)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign to dictionary" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[wwwAuth(itemArr(0))]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[itemArr(1).replace("""","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <Assign DisplayName="Assign Client Id Param" sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[client_id]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Format("{0}@{1}", in_ClientId, wwwAuth("Bearer realm"))]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:Matches DisplayName="Matches - Parse Domain from URL" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[in_SPsiteURL]" IsBuilderTabModified="False" Pattern=".*\/\/(\w+\.\w+\.\w{2,})\/.*" RegexOption="IgnoreCase, Compiled" Result="[domains]" />
          <Assign DisplayName="Assign Resource Header" sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[resource]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Format("{0}/{1}@{2}", wwwAuth("client_id"), domains(0).Groups(1).Value, wwwAuth("Bearer realm"))]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[&quot;Dummy request failed &quot; + dummyResponse]" />
          <Throw Exception="[New Exception(&quot;Dummy setup call failed.&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
        </Sequence>
      </If.Else>
    </If>
    <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="803,720" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="5" RetryInterval="00:00:01">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="563,546" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Auth" EndPoint="[String.Format(&quot;https://accounts.accesscontrol.windows.net/{0}/tokens/OAuth/2&quot;, wwwAuth(&quot;Bearer realm&quot;))]" sap:VirtualizedContainerService.HintSize="521,22" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[result]" StatusCode="[code]" TimeoutMS="60000">
              <ui:HttpClient.Attachments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Attachments>
              <ui:HttpClient.Cookies>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Cookies>
              <ui:HttpClient.Headers>
                <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/x-www-form-urlencoded</InArgument>
              </ui:HttpClient.Headers>
              <ui:HttpClient.Parameters>
                <InArgument x:TypeArguments="x:String" x:Key="grant_type">client_credentials</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="client_id">[client_id]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="client_secret">[in_ClientSecret]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="resource">[resource]</InArgument>
              </ui:HttpClient.Parameters>
              <ui:HttpClient.UrlSegments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.UrlSegments>
            </ui:HttpClient>
            <If Condition="[code = 0]" DisplayName="If Timeout" sap:VirtualizedContainerService.HintSize="521,392" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[&quot;Sharepoint request timed out&quot;]" />
                  <Throw Exception="[New Exception(&quot;SharePoint request timed out.&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <If Condition="[CStr(code).StartsWith(&quot;2&quot;)]" DisplayName="If Successful Response" sap:VirtualizedContainerService.HintSize="803,400" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,252" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[resultJSON]" JsonString="[result]" />
          <Assign DisplayName="Assign Resulting Token" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_Token]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[resultJSON("access_token").ToString]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[&quot;Authorization request failed: &quot;+result]" />
          <Throw Exception="[New Exception(&quot;Authorization request failed.&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>